<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.lt.dao.back.IBackUserDao">
    <select id="findBack" resultType="it.lt.entity.BackendUser">
        SELECT b.*,(SELECT valueName FROM data_dictionary d
        WHERE b.userType=d.valueId AND typecode='USER_TYPE') AS userTypeName FROM backend_user  b
        WHERE userCode=#{username} AND userPassword=#{password};
    </select>


    <select id="getAppInfoList" resultType="it.lt.entity.AppInfo">
        select a.id, a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devId,
        (select devName from dev_user where id = a.devId) as devName,
        a.status,
        (select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
        a.flatformId,
        (select valueName from data_dictionary d where  a.flatformId=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
        a.categoryLevel1,
        (select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
        a.categoryLevel2,
        (select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
        a.categoryLevel3,
        (select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
        a.downloads,
        a.onSaleDate,
        a.versionId,
        (SELECT v.versionNo FROM app_version v WHERE v.appid=a.`id` ORDER BY  id DESC LIMIT 0,1) as versionNo
        from  app_info a where a.status=1
        order by id asc limit #{from},#{pageSize}
    </select>
    <select id="findAll" resultType="it.lt.entity.AppInfo">
        select a.id, a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devId,
				(select devName from dev_user where id = a.devId) as devName,
				a.status,
				(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
				a.flatformId,
				(select valueName from data_dictionary d where  a.flatformId=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
				a.categoryLevel1,
				(select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
				a.categoryLevel2,
				(select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
				a.categoryLevel3,
				(select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
				a.downloads,
				a.onSaleDate,
				a.versionId,
				(SELECT v.versionNo FROM app_version v WHERE v.appid=a.`id` ORDER BY  id DESC LIMIT 0,1 ) as versionNo
			from  app_info a where a.status=1
    </select>
    <select id="getcount" resultType="int">
		select count(id) from app_info where status=1;
	</select>



    <select id="getAppInfo" resultType="it.lt.entity.AppInfo">
        select * ,
        (select devName from dev_user where id = a.devId) as devName,
        (select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
        (select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
        (select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
        (select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
        (select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
        (select v.versionNo from app_version v where v.id=a.versionId ) as versionNo
        from app_info a
        <trim prefix="where" prefixOverrides="and | or">
            <if test="id != null">
                and a.id = #{id}
            </if>
            <if test="status != null">
                and a.status = 1
            </if>
        </trim>
    </select>
    <!--	修改状态-->
    <update id="updateSatus">
		update app_info
			set status=#{status}
			where id = #{id}
	</update>
</mapper>